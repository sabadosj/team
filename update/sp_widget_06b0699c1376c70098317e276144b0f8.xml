<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function ($scope, $http, spUtil, $location, $rootScope, $timeout,uiGridConstants,$uibModal) {
	
  var c = this;
  // joseph sabados = f148cd5d2b4d3100979e1ee119da15e5

//	$rootScope.$on('loadTeam', function(event,data) {	
    c.showWidget = true;
//    $http.get('/api/x_saic4_saic_team/teammgmtutils/getMyTeamTrainActivty?usrSysID=f148cd5d2b4d3100979e1ee119da15e5')
//      .then(function(res) {
//      $scope.data.directReports = res.data.result;
//    });
//  });
  $rootScope.$on('loadTeamOff', function(event,data) {	
		 c.showWidget = false;
  });
  c.data.activeQuery = "";
/*  $rootScope.$on('loadTable', function(event,data) {
		var paramItems = data.split("|");
		alert(data);
		if (paramItems[0]=='undefined' || paramItems[0]=='ALL') {
			sl='';
		} else {
			sl=paramItems[0];
		}
		if (paramItems[1]=='undefined' || paramItems[1]=='ALL') {
			cg='';
		} else {
			cg=paramItems[1];
		}
		if (paramItems[2]=='undefined' || paramItems[2]=='ALL') {
			rl='';
		} else {
			rl=paramItems[2];
		}
		if (paramItems[3]=='undefined' || paramItems[3]=='ALL') {
			loc='';
		} else {
			loc=paramItems[3];
		}*/
  $timeout(function(){	
     $http.get('/api/x_saic4_saic_team/teammgmtutils/getMyTeamTrainActivty?usrSysID=f148cd5d2b4d3100979e1ee119da15e5')
	       .then(function(res) {
               $scope.gridOptions.data   = res.data.result;
			   c.data.activeQuery = "true";
	       });
  });
	
	// This is a handler for when a row is clicked
	$scope.rowClickHandler = function rowClickHandler (row) {
		//alert(row.entity.crmID);
//		alert('You clicked on the row for: ' + row.entity.crmID +' '+ row.entity.name);
		$timeout(function(){
	    $http.get('/api/x_saic4_kps_core/kpc_pursuitdetails/onePursuitDetail?sys_id='+row.entity.sysID)
        .then(function(res) {
        c.data.purRec2 = res.data.result;
        c.data.crmID = c.data.purRec2.crmID;
        c.data.crm_sys_id = c.data.purRec2.crm_sys_id;
        c.data.descript = c.data.purRec2.descript;
//				alert('desc:' + c.data.descript);
				c.modalInstance = $uibModal.open({
			    templateUrl: 'modalTemplate',
			    scope: $scope
		    });
      });
	  });
  };

	c.closeModal = function() {
		c.modalInstance.close();
	}


	$scope.gridOptions = {
		enableFiltering: true,
//    showGridFooter: true,
    showColumnFooter: true,

		onRegisterApi: function(gridApi){
      $scope.gridApi = gridApi;			
    },

		// This template applies the "rowClickHandler" to all rows.
		rowTemplate: '<div ng-click="grid.appScope.rowClickHandler(row)" ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.uid" class="ui-grid-cell" ng-class="col.colIndex()" ui-grid-cell></div>',
		
    columnDefs: [
			{ 
				name: 'first_name',
				field: 'first_name',
				displayName: "First Name",
				visible:true,
			  width:'80'
			},			
/*			{ 
				name: 'name',
			  cellTemplate: '<div ng-bind-html="COL_FIELD"></div>',
			  width:'30%'
			},*/
			{ 
				name: 'last_name',
				field: 'last_name',
				displayName: 'Last Name',
				width:"100"
			},
			{ 
				name: 'totPending',
				field: 'totPending',
				displayName: "Total Pending",
        type: 'number',
				width:"90",
				cellClass:'text-right',
				aggregationType: uiGridConstants.aggregationTypes.sum
			},			
			{ 
				name: 'totApproved',
				field: 'totApproved',
				displayName: "Total Approved",
				type: 'number',
				width:"90",
				cellClass:'text-right',
				aggregationType: uiGridConstants.aggregationTypes.sum
			},			
			{ 
				name: 'totDenied',
				field: 'totDenied',
				displayName: "Total Denied",
				width:"90",
				cellClass:'text-right',
				aggregationType: uiGridConstants.aggregationTypes.sum
			}
		],
		
		// Enable Pagination
    paginationPageSizes: [10, 20, 50],
    paginationPageSize: 10,
		
		// Enable Export
		enableGridMenu: true,
    enableSelectAll: true,
    exporterCsvFilename: 'ExportedData.csv',
		exporterPdfDefaultStyle: {fontSize: 9},
    exporterPdfTableStyle: {margin: [30, 30, 30, 30]},
    exporterPdfTableHeaderStyle: {fontSize: 10, bold: true, italics: true, color: 'red'},
    exporterPdfHeader: { text: "Exported Data", style: 'headerStyle' },
    exporterPdfFooter: function ( currentPage, pageCount ) {
      return { text: currentPage.toString() + ' of ' + pageCount.toString(), style: 'footerStyle' };
    },
    exporterPdfCustomFormatter: function ( docDefinition ) {
      docDefinition.styles.headerStyle = { fontSize: 22, bold: true };
      docDefinition.styles.footerStyle = { fontSize: 10, bold: true };
      return docDefinition;
    },
    exporterPdfOrientation: 'landscape',
    exporterPdfPageSize: 'LETTER',
    exporterPdfMaxGridWidth: 500,
		exporterCsvLinkElement: angular.element(document.querySelectorAll(".custom-csv-link-location"))

  };
	

}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance_table</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list>title,table,filter,maximum_entries,order_direction,glyph,field_list,color,order_by,sp_page</field_list>
        <has_preview>true</has_preview>
        <id>my-saic-team-training-activity</id>
        <internal>false</internal>
        <link/>
        <name>My SAIC Team Training Activity</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function(){
	/*  "use strict"; - linter issues */
	// populate the 'data' object
	var sp_page = $sp.getValue('sp_page');
	var pageGR = new GlideRecord('sp_page');
	pageGR.get(sp_page);
	data.page_id = pageGR.id.getDisplayValue();
	$sp.getValues(data);
	if (data.field_list) {
		data.fields_array = data.field_list.split(',');	
	} else {
		data.field_list = $sp.getListColumns(data.table);
	}

	if (input) {
		data.p = input.p;
		data.o = input.o;
		data.d = input.d;
		data.q = input.q;
	}
	data.p = data.p || 1;
	data.o = data.o || $sp.getValue('order_by');
	data.d = data.d || $sp.getValue('order_direction');

	data.page_index = (data.p - 1);
	data.window_size = $sp.getValue('maximum_entries') || 10;
	data.window_start  = (data.page_index * data.window_size);
	data.window_end = (((data.page_index + 1) * data.window_size));
	data.filter = $sp.getValue("filter");

	var gr = new GlideRecordSecure(data.table);
	if (!gr.isValid()) {
		data.invalid_table = true;
		data.table_label = data.table;
		return;
	}
	data.table_label = gr.getLabel();
	
	var widgetParams = {
		table: data.table, 
		fields: data.field_list,
		o: data.o,
		d: data.d,
		filter: data.filter,
		window_size: data.window_size,
		view: 'sp',
		title: options.title,
		show_breadcrumbs: true
	};
	data.dataTableWidget = $sp.getWidget('widget-data-table', widgetParams);
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>adminjoe</sys_created_by>
        <sys_created_on>2017-11-28 20:47:34</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>06b0699c1376c70098317e276144b0f8</sys_id>
        <sys_mod_count>24</sys_mod_count>
        <sys_name>My SAIC Team Training Activity</sys_name>
        <sys_package display_value="SAIC Team Management" source="x_saic4_saic_team">18fca8ee13218340f6f4b53a6144b080</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="SAIC Team Management">18fca8ee13218340f6f4b53a6144b080</sys_scope>
        <sys_update_name>sp_widget_06b0699c1376c70098317e276144b0f8</sys_update_name>
        <sys_updated_by>adminjoe</sys_updated_by>
        <sys_updated_on>2017-11-29 04:56:09</sys_updated_on>
        <template><![CDATA[<sp-panel ng-if="c.showWidget" rect="rect" title="'${Team}'">
  <div ui-grid="gridOptions" 
     ui-grid-pagination
     ui-grid-exporter 
     class="grid"
     style="font-size:.80em; height:400px;">
  </div>
</sp-panel>

<!-- Modal -->
<script type="text/ng-template" id="modalTemplate">
<div id="myModal" class="modal fade" role="dialog">
  <div class="modal-dialog modal-lg">

    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">PM's for <strong>{{c.name}}</strong></h4>
      </div>
      <div class="modal-body table-responsive">
       <table class="table table-condensed table-striped">
        <tr>
         <th>PM</th>
         <th>CRN</th>
         <th colspan="2">Title</th>
         <th>PoP Start</th>
         <th>PoP End</th>
        </tr>
        <tr ng-repeat="pminfo in c.data.pm">
         <td style='white-space: nowrap;'>{{pminfo.pm_name}}</td>
         <td style='white-space: nowrap;'>{{pminfo.contract}}</td>
         <td>{{pminfo.title}}</td>
          <td><fa name="info-circle" size="2" title="Customer: {{pminfo.customer}}"></fa></td>
         <td style='white-space: nowrap;'>{{pminfo.popStart}}</td>
         <td style='white-space: nowrap;'>{{pminfo.popEnd}}</td>
        </tr>
       </table>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>

  </div>
</div>

</script>
]]></template>
    </sp_widget>
</record_update>
